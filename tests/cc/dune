; File auto-generated by gentests

; Auto-generated part begin
(rule
 (target testfile-cc016_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc016_ci_cdcl.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_cdcl.output)))

(rule
 (target testfile-cc016_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc016_ci_tableaux.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_tableaux.output)))

(rule
 (target testfile-cc016_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc016_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc016_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc016_cdcl_tableaux.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_cdcl_tableaux.output)))

(rule
 (target testfile-cc016_cdcl.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_cdcl.output)))

(rule
 (target testfile-cc016_tableaux_cdcl.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_tableaux_cdcl.output)))

(rule
 (target testfile-cc016_tableaux.output)
 (deps (:input testfile-cc016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc016.expected 
      testfile-cc016_tableaux.output)))

(rule
 (target testfile-cc015_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc015_ci_cdcl.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_cdcl.output)))

(rule
 (target testfile-cc015_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc015_ci_tableaux.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_tableaux.output)))

(rule
 (target testfile-cc015_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc015_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc015_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc015_cdcl_tableaux.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_cdcl_tableaux.output)))

(rule
 (target testfile-cc015_cdcl.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_cdcl.output)))

(rule
 (target testfile-cc015_tableaux_cdcl.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_tableaux_cdcl.output)))

(rule
 (target testfile-cc015_tableaux.output)
 (deps (:input testfile-cc015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc015.expected 
      testfile-cc015_tableaux.output)))

(rule
 (target testfile-cc014_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc014_ci_cdcl.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_cdcl.output)))

(rule
 (target testfile-cc014_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc014_ci_tableaux.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_tableaux.output)))

(rule
 (target testfile-cc014_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc014_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc014_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc014_cdcl_tableaux.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_cdcl_tableaux.output)))

(rule
 (target testfile-cc014_cdcl.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_cdcl.output)))

(rule
 (target testfile-cc014_tableaux_cdcl.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_tableaux_cdcl.output)))

(rule
 (target testfile-cc014_tableaux.output)
 (deps (:input testfile-cc014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc014.expected 
      testfile-cc014_tableaux.output)))

(rule
 (target testfile-cc013_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc013_ci_cdcl.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_cdcl.output)))

(rule
 (target testfile-cc013_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc013_ci_tableaux.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_tableaux.output)))

(rule
 (target testfile-cc013_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc013_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc013_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc013_cdcl_tableaux.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_cdcl_tableaux.output)))

(rule
 (target testfile-cc013_cdcl.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_cdcl.output)))

(rule
 (target testfile-cc013_tableaux_cdcl.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_tableaux_cdcl.output)))

(rule
 (target testfile-cc013_tableaux.output)
 (deps (:input testfile-cc013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc013.expected 
      testfile-cc013_tableaux.output)))

(rule
 (target testfile-cc012_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc012_ci_cdcl.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_cdcl.output)))

(rule
 (target testfile-cc012_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc012_ci_tableaux.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_tableaux.output)))

(rule
 (target testfile-cc012_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc012_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc012_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc012_cdcl_tableaux.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_cdcl_tableaux.output)))

(rule
 (target testfile-cc012_cdcl.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_cdcl.output)))

(rule
 (target testfile-cc012_tableaux_cdcl.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_tableaux_cdcl.output)))

(rule
 (target testfile-cc012_tableaux.output)
 (deps (:input testfile-cc012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc012.expected 
      testfile-cc012_tableaux.output)))

(rule
 (target testfile-cc011_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc011_ci_cdcl.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_cdcl.output)))

(rule
 (target testfile-cc011_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc011_ci_tableaux.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_tableaux.output)))

(rule
 (target testfile-cc011_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc011_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc011_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc011_cdcl_tableaux.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_cdcl_tableaux.output)))

(rule
 (target testfile-cc011_cdcl.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_cdcl.output)))

(rule
 (target testfile-cc011_tableaux_cdcl.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_tableaux_cdcl.output)))

(rule
 (target testfile-cc011_tableaux.output)
 (deps (:input testfile-cc011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc011.expected 
      testfile-cc011_tableaux.output)))

(rule
 (target testfile-cc010_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc010_ci_cdcl.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_cdcl.output)))

(rule
 (target testfile-cc010_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc010_ci_tableaux.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_tableaux.output)))

(rule
 (target testfile-cc010_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc010_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc010_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc010_cdcl_tableaux.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_cdcl_tableaux.output)))

(rule
 (target testfile-cc010_cdcl.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_cdcl.output)))

(rule
 (target testfile-cc010_tableaux_cdcl.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_tableaux_cdcl.output)))

(rule
 (target testfile-cc010_tableaux.output)
 (deps (:input testfile-cc010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc010.expected 
      testfile-cc010_tableaux.output)))

(rule
 (target testfile-cc009_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc009_ci_cdcl.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_cdcl.output)))

(rule
 (target testfile-cc009_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc009_ci_tableaux.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_tableaux.output)))

(rule
 (target testfile-cc009_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc009_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc009_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc009_cdcl_tableaux.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_cdcl_tableaux.output)))

(rule
 (target testfile-cc009_cdcl.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_cdcl.output)))

(rule
 (target testfile-cc009_tableaux_cdcl.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_tableaux_cdcl.output)))

(rule
 (target testfile-cc009_tableaux.output)
 (deps (:input testfile-cc009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc009.expected 
      testfile-cc009_tableaux.output)))

(rule
 (target testfile-cc008_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc008_ci_cdcl.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_cdcl.output)))

(rule
 (target testfile-cc008_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc008_ci_tableaux.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_tableaux.output)))

(rule
 (target testfile-cc008_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc008_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc008_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc008_cdcl_tableaux.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_cdcl_tableaux.output)))

(rule
 (target testfile-cc008_cdcl.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_cdcl.output)))

(rule
 (target testfile-cc008_tableaux_cdcl.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_tableaux_cdcl.output)))

(rule
 (target testfile-cc008_tableaux.output)
 (deps (:input testfile-cc008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc008.expected 
      testfile-cc008_tableaux.output)))

(rule
 (target testfile-cc007_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc007_ci_cdcl.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_cdcl.output)))

(rule
 (target testfile-cc007_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc007_ci_tableaux.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_tableaux.output)))

(rule
 (target testfile-cc007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc007_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc007_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc007_cdcl_tableaux.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_cdcl_tableaux.output)))

(rule
 (target testfile-cc007_cdcl.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_cdcl.output)))

(rule
 (target testfile-cc007_tableaux_cdcl.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_tableaux_cdcl.output)))

(rule
 (target testfile-cc007_tableaux.output)
 (deps (:input testfile-cc007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc007.expected 
      testfile-cc007_tableaux.output)))

(rule
 (target testfile-cc006_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc006_ci_cdcl.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_cdcl.output)))

(rule
 (target testfile-cc006_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc006_ci_tableaux.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_tableaux.output)))

(rule
 (target testfile-cc006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc006_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc006_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc006_cdcl_tableaux.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_cdcl_tableaux.output)))

(rule
 (target testfile-cc006_cdcl.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_cdcl.output)))

(rule
 (target testfile-cc006_tableaux_cdcl.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_tableaux_cdcl.output)))

(rule
 (target testfile-cc006_tableaux.output)
 (deps (:input testfile-cc006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc006.expected 
      testfile-cc006_tableaux.output)))

(rule
 (target testfile-cc005_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc005_ci_cdcl.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_cdcl.output)))

(rule
 (target testfile-cc005_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc005_ci_tableaux.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_tableaux.output)))

(rule
 (target testfile-cc005_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc005_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc005_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc005_cdcl_tableaux.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_cdcl_tableaux.output)))

(rule
 (target testfile-cc005_cdcl.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_cdcl.output)))

(rule
 (target testfile-cc005_tableaux_cdcl.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_tableaux_cdcl.output)))

(rule
 (target testfile-cc005_tableaux.output)
 (deps (:input testfile-cc005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc005.expected 
      testfile-cc005_tableaux.output)))

(rule
 (target testfile-cc004_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc004_ci_cdcl.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_cdcl.output)))

(rule
 (target testfile-cc004_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc004_ci_tableaux.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_tableaux.output)))

(rule
 (target testfile-cc004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc004_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc004_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc004_cdcl_tableaux.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_cdcl_tableaux.output)))

(rule
 (target testfile-cc004_cdcl.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_cdcl.output)))

(rule
 (target testfile-cc004_tableaux_cdcl.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_tableaux_cdcl.output)))

(rule
 (target testfile-cc004_tableaux.output)
 (deps (:input testfile-cc004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc004.expected 
      testfile-cc004_tableaux.output)))

(rule
 (target testfile-cc003_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc003_ci_cdcl.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_cdcl.output)))

(rule
 (target testfile-cc003_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc003_ci_tableaux.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_tableaux.output)))

(rule
 (target testfile-cc003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc003_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc003_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc003_cdcl_tableaux.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_cdcl_tableaux.output)))

(rule
 (target testfile-cc003_cdcl.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_cdcl.output)))

(rule
 (target testfile-cc003_tableaux_cdcl.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_tableaux_cdcl.output)))

(rule
 (target testfile-cc003_tableaux.output)
 (deps (:input testfile-cc003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc003.expected 
      testfile-cc003_tableaux.output)))

(rule
 (target testfile-cc002_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc002_ci_cdcl.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_cdcl.output)))

(rule
 (target testfile-cc002_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc002_ci_tableaux.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_tableaux.output)))

(rule
 (target testfile-cc002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc002_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc002_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc002_cdcl_tableaux.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_cdcl_tableaux.output)))

(rule
 (target testfile-cc002_cdcl.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_cdcl.output)))

(rule
 (target testfile-cc002_tableaux_cdcl.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_tableaux_cdcl.output)))

(rule
 (target testfile-cc002_tableaux.output)
 (deps (:input testfile-cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc002.expected 
      testfile-cc002_tableaux.output)))

(rule
 (target testfile-cc001_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc001_ci_cdcl.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_cdcl.output)))

(rule
 (target testfile-cc001_ci_tableaux_cdcl.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_tableaux_cdcl.output)))

(rule
 (target testfile-cc001_ci_tableaux.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_tableaux.output)))

(rule
 (target testfile-cc001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-cc001_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-cc001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-cc001_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-cc001_cdcl_tableaux.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_cdcl_tableaux.output)))

(rule
 (target testfile-cc001_cdcl.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_cdcl.output)))

(rule
 (target testfile-cc001_tableaux_cdcl.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_tableaux_cdcl.output)))

(rule
 (target testfile-cc001_tableaux.output)
 (deps (:input testfile-cc001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-cc001.expected 
      testfile-cc001_tableaux.output)))

(rule
 (target testfile-ac_cc002_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-ac_cc002_ci_cdcl.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_cdcl.output)))

(rule
 (target testfile-ac_cc002_ci_tableaux_cdcl.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_tableaux_cdcl.output)))

(rule
 (target testfile-ac_cc002_ci_tableaux.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_tableaux.output)))

(rule
 (target testfile-ac_cc002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-ac_cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-ac_cc002_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-ac_cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-ac_cc002_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-ac_cc002_cdcl_tableaux.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_cdcl_tableaux.output)))

(rule
 (target testfile-ac_cc002_cdcl.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_cdcl.output)))

(rule
 (target testfile-ac_cc002_tableaux_cdcl.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_tableaux_cdcl.output)))

(rule
 (target testfile-ac_cc002_tableaux.output)
 (deps (:input testfile-ac_cc002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-ac_cc002.expected 
      testfile-ac_cc002_tableaux.output)))
; Auto-generated part end
