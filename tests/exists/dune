; File auto-generated by gentests

; Auto-generated part begin
(rule
 (target testfile-exists007_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists007_ci_cdcl.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_cdcl.output)))

(rule
 (target testfile-exists007_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists007_ci_tableaux.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_tableaux.output)))

(rule
 (target testfile-exists007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists007_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists007_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists007_cdcl_tableaux.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_cdcl_tableaux.output)))

(rule
 (target testfile-exists007_cdcl.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_cdcl.output)))

(rule
 (target testfile-exists007_tableaux_cdcl.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_tableaux_cdcl.output)))

(rule
 (target testfile-exists007_tableaux.output)
 (deps (:input testfile-exists007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists007.expected 
      testfile-exists007_tableaux.output)))

(rule
 (target testfile-exists006_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists006_ci_cdcl.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_cdcl.output)))

(rule
 (target testfile-exists006_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists006_ci_tableaux.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_tableaux.output)))

(rule
 (target testfile-exists006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists006_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists006_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists006_cdcl_tableaux.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_cdcl_tableaux.output)))

(rule
 (target testfile-exists006_cdcl.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_cdcl.output)))

(rule
 (target testfile-exists006_tableaux_cdcl.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_tableaux_cdcl.output)))

(rule
 (target testfile-exists006_tableaux.output)
 (deps (:input testfile-exists006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists006.expected 
      testfile-exists006_tableaux.output)))

(rule
 (target testfile-exists004_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists004_ci_cdcl.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_cdcl.output)))

(rule
 (target testfile-exists004_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists004_ci_tableaux.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_tableaux.output)))

(rule
 (target testfile-exists004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists004_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists004_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists004_cdcl_tableaux.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_cdcl_tableaux.output)))

(rule
 (target testfile-exists004_cdcl.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_cdcl.output)))

(rule
 (target testfile-exists004_tableaux_cdcl.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_tableaux_cdcl.output)))

(rule
 (target testfile-exists004_tableaux.output)
 (deps (:input testfile-exists004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists004.expected 
      testfile-exists004_tableaux.output)))

(rule
 (target testfile-exists003_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists003_ci_cdcl.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_cdcl.output)))

(rule
 (target testfile-exists003_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists003_ci_tableaux.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_tableaux.output)))

(rule
 (target testfile-exists003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists003_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists003_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists003_cdcl_tableaux.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_cdcl_tableaux.output)))

(rule
 (target testfile-exists003_cdcl.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_cdcl.output)))

(rule
 (target testfile-exists003_tableaux_cdcl.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_tableaux_cdcl.output)))

(rule
 (target testfile-exists003_tableaux.output)
 (deps (:input testfile-exists003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists003.expected 
      testfile-exists003_tableaux.output)))

(rule
 (target testfile-exists002_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists002_ci_cdcl.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_cdcl.output)))

(rule
 (target testfile-exists002_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists002_ci_tableaux.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_tableaux.output)))

(rule
 (target testfile-exists002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists002_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists002_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists002_cdcl_tableaux.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_cdcl_tableaux.output)))

(rule
 (target testfile-exists002_cdcl.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_cdcl.output)))

(rule
 (target testfile-exists002_tableaux_cdcl.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_tableaux_cdcl.output)))

(rule
 (target testfile-exists002_tableaux.output)
 (deps (:input testfile-exists002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists002.expected 
      testfile-exists002_tableaux.output)))

(rule
 (target testfile-exists001_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists001_ci_cdcl.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_cdcl.output)))

(rule
 (target testfile-exists001_ci_tableaux_cdcl.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exists001_ci_tableaux.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_tableaux.output)))

(rule
 (target testfile-exists001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exists001_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exists001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exists001_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exists001_cdcl_tableaux.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_cdcl_tableaux.output)))

(rule
 (target testfile-exists001_cdcl.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_cdcl.output)))

(rule
 (target testfile-exists001_tableaux_cdcl.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_tableaux_cdcl.output)))

(rule
 (target testfile-exists001_tableaux.output)
 (deps (:input testfile-exists001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exists001.expected 
      testfile-exists001_tableaux.output)))

(rule
 (target testfile-exist004_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist004_ci_cdcl.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_cdcl.output)))

(rule
 (target testfile-exist004_ci_tableaux_cdcl.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exist004_ci_tableaux.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_tableaux.output)))

(rule
 (target testfile-exist004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist004_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exist004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exist004_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist004_cdcl_tableaux.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_cdcl_tableaux.output)))

(rule
 (target testfile-exist004_cdcl.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_cdcl.output)))

(rule
 (target testfile-exist004_tableaux_cdcl.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_tableaux_cdcl.output)))

(rule
 (target testfile-exist004_tableaux.output)
 (deps (:input testfile-exist004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist004.expected 
      testfile-exist004_tableaux.output)))

(rule
 (target testfile-exist003_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist003_ci_cdcl.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_cdcl.output)))

(rule
 (target testfile-exist003_ci_tableaux_cdcl.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exist003_ci_tableaux.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_tableaux.output)))

(rule
 (target testfile-exist003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist003_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exist003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exist003_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist003_cdcl_tableaux.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_cdcl_tableaux.output)))

(rule
 (target testfile-exist003_cdcl.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_cdcl.output)))

(rule
 (target testfile-exist003_tableaux_cdcl.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_tableaux_cdcl.output)))

(rule
 (target testfile-exist003_tableaux.output)
 (deps (:input testfile-exist003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist003.expected 
      testfile-exist003_tableaux.output)))

(rule
 (target testfile-exist002_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist002_ci_cdcl.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_cdcl.output)))

(rule
 (target testfile-exist002_ci_tableaux_cdcl.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_tableaux_cdcl.output)))

(rule
 (target testfile-exist002_ci_tableaux.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_tableaux.output)))

(rule
 (target testfile-exist002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-exist002_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-exist002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-exist002_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-exist002_cdcl_tableaux.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_cdcl_tableaux.output)))

(rule
 (target testfile-exist002_cdcl.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_cdcl.output)))

(rule
 (target testfile-exist002_tableaux_cdcl.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_tableaux_cdcl.output)))

(rule
 (target testfile-exist002_tableaux.output)
 (deps (:input testfile-exist002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-exist002.expected 
      testfile-exist002_tableaux.output)))
; Auto-generated part end
