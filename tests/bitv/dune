; File auto-generated by gentests

; Auto-generated part begin
(rule
 (target testfile-bitv023_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv023_ci_cdcl.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_cdcl.output)))

(rule
 (target testfile-bitv023_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv023_ci_tableaux.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_tableaux.output)))

(rule
 (target testfile-bitv023_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv023_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv023_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv023_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv023_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv023_cdcl_tableaux.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_cdcl_tableaux.output)))

(rule
 (target testfile-bitv023_cdcl.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_cdcl.output)))

(rule
 (target testfile-bitv023_tableaux_cdcl.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_tableaux_cdcl.output)))

(rule
 (target testfile-bitv023_tableaux.output)
 (deps (:input testfile-bitv023.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv023.expected 
      testfile-bitv023_tableaux.output)))

(rule
 (target testfile-bitv022_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv022_ci_cdcl.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_cdcl.output)))

(rule
 (target testfile-bitv022_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv022_ci_tableaux.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_tableaux.output)))

(rule
 (target testfile-bitv022_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv022_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv022_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv022_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv022_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv022_cdcl_tableaux.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_cdcl_tableaux.output)))

(rule
 (target testfile-bitv022_cdcl.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_cdcl.output)))

(rule
 (target testfile-bitv022_tableaux_cdcl.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_tableaux_cdcl.output)))

(rule
 (target testfile-bitv022_tableaux.output)
 (deps (:input testfile-bitv022.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv022.expected 
      testfile-bitv022_tableaux.output)))

(rule
 (target testfile-bitv021_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv021_ci_cdcl.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_cdcl.output)))

(rule
 (target testfile-bitv021_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv021_ci_tableaux.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_tableaux.output)))

(rule
 (target testfile-bitv021_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv021_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv021_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv021_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv021_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv021_cdcl_tableaux.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_cdcl_tableaux.output)))

(rule
 (target testfile-bitv021_cdcl.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_cdcl.output)))

(rule
 (target testfile-bitv021_tableaux_cdcl.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_tableaux_cdcl.output)))

(rule
 (target testfile-bitv021_tableaux.output)
 (deps (:input testfile-bitv021.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv021.expected 
      testfile-bitv021_tableaux.output)))

(rule
 (target testfile-bitv020_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv020_ci_cdcl.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_cdcl.output)))

(rule
 (target testfile-bitv020_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv020_ci_tableaux.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_tableaux.output)))

(rule
 (target testfile-bitv020_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv020_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv020_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv020_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv020_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv020_cdcl_tableaux.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_cdcl_tableaux.output)))

(rule
 (target testfile-bitv020_cdcl.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_cdcl.output)))

(rule
 (target testfile-bitv020_tableaux_cdcl.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_tableaux_cdcl.output)))

(rule
 (target testfile-bitv020_tableaux.output)
 (deps (:input testfile-bitv020.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv020.expected 
      testfile-bitv020_tableaux.output)))

(rule
 (target testfile-bitv019_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv019_ci_cdcl.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_cdcl.output)))

(rule
 (target testfile-bitv019_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv019_ci_tableaux.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_tableaux.output)))

(rule
 (target testfile-bitv019_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv019_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv019_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv019_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv019_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv019_cdcl_tableaux.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_cdcl_tableaux.output)))

(rule
 (target testfile-bitv019_cdcl.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_cdcl.output)))

(rule
 (target testfile-bitv019_tableaux_cdcl.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_tableaux_cdcl.output)))

(rule
 (target testfile-bitv019_tableaux.output)
 (deps (:input testfile-bitv019.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv019.expected 
      testfile-bitv019_tableaux.output)))

(rule
 (target testfile-bitv018_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv018_ci_cdcl.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_cdcl.output)))

(rule
 (target testfile-bitv018_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv018_ci_tableaux.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_tableaux.output)))

(rule
 (target testfile-bitv018_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv018_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv018_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv018_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv018_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv018_cdcl_tableaux.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_cdcl_tableaux.output)))

(rule
 (target testfile-bitv018_cdcl.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_cdcl.output)))

(rule
 (target testfile-bitv018_tableaux_cdcl.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_tableaux_cdcl.output)))

(rule
 (target testfile-bitv018_tableaux.output)
 (deps (:input testfile-bitv018.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv018.expected 
      testfile-bitv018_tableaux.output)))

(rule
 (target testfile-bitv017_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv017_ci_cdcl.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_cdcl.output)))

(rule
 (target testfile-bitv017_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv017_ci_tableaux.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_tableaux.output)))

(rule
 (target testfile-bitv017_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv017_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv017_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv017_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv017_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv017_cdcl_tableaux.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_cdcl_tableaux.output)))

(rule
 (target testfile-bitv017_cdcl.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_cdcl.output)))

(rule
 (target testfile-bitv017_tableaux_cdcl.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_tableaux_cdcl.output)))

(rule
 (target testfile-bitv017_tableaux.output)
 (deps (:input testfile-bitv017.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv017.expected 
      testfile-bitv017_tableaux.output)))

(rule
 (target testfile-bitv016_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv016_ci_cdcl.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_cdcl.output)))

(rule
 (target testfile-bitv016_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv016_ci_tableaux.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_tableaux.output)))

(rule
 (target testfile-bitv016_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv016_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv016_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv016_cdcl_tableaux.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_cdcl_tableaux.output)))

(rule
 (target testfile-bitv016_cdcl.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_cdcl.output)))

(rule
 (target testfile-bitv016_tableaux_cdcl.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_tableaux_cdcl.output)))

(rule
 (target testfile-bitv016_tableaux.output)
 (deps (:input testfile-bitv016.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv016.expected 
      testfile-bitv016_tableaux.output)))

(rule
 (target testfile-bitv015_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv015_ci_cdcl.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_cdcl.output)))

(rule
 (target testfile-bitv015_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv015_ci_tableaux.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_tableaux.output)))

(rule
 (target testfile-bitv015_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv015_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv015_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv015_cdcl_tableaux.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_cdcl_tableaux.output)))

(rule
 (target testfile-bitv015_cdcl.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_cdcl.output)))

(rule
 (target testfile-bitv015_tableaux_cdcl.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_tableaux_cdcl.output)))

(rule
 (target testfile-bitv015_tableaux.output)
 (deps (:input testfile-bitv015.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv015.expected 
      testfile-bitv015_tableaux.output)))

(rule
 (target testfile-bitv014_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv014_ci_cdcl.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_cdcl.output)))

(rule
 (target testfile-bitv014_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv014_ci_tableaux.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_tableaux.output)))

(rule
 (target testfile-bitv014_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv014_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv014_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv014_cdcl_tableaux.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_cdcl_tableaux.output)))

(rule
 (target testfile-bitv014_cdcl.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_cdcl.output)))

(rule
 (target testfile-bitv014_tableaux_cdcl.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_tableaux_cdcl.output)))

(rule
 (target testfile-bitv014_tableaux.output)
 (deps (:input testfile-bitv014.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv014.expected 
      testfile-bitv014_tableaux.output)))

(rule
 (target testfile-bitv013_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv013_ci_cdcl.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_cdcl.output)))

(rule
 (target testfile-bitv013_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv013_ci_tableaux.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_tableaux.output)))

(rule
 (target testfile-bitv013_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv013_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv013_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv013_cdcl_tableaux.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_cdcl_tableaux.output)))

(rule
 (target testfile-bitv013_cdcl.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_cdcl.output)))

(rule
 (target testfile-bitv013_tableaux_cdcl.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_tableaux_cdcl.output)))

(rule
 (target testfile-bitv013_tableaux.output)
 (deps (:input testfile-bitv013.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv013.expected 
      testfile-bitv013_tableaux.output)))

(rule
 (target testfile-bitv012_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv012_ci_cdcl.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_cdcl.output)))

(rule
 (target testfile-bitv012_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv012_ci_tableaux.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_tableaux.output)))

(rule
 (target testfile-bitv012_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv012_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv012_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv012_cdcl_tableaux.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_cdcl_tableaux.output)))

(rule
 (target testfile-bitv012_cdcl.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_cdcl.output)))

(rule
 (target testfile-bitv012_tableaux_cdcl.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_tableaux_cdcl.output)))

(rule
 (target testfile-bitv012_tableaux.output)
 (deps (:input testfile-bitv012.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv012.expected 
      testfile-bitv012_tableaux.output)))

(rule
 (target testfile-bitv011_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv011_ci_cdcl.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_cdcl.output)))

(rule
 (target testfile-bitv011_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv011_ci_tableaux.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_tableaux.output)))

(rule
 (target testfile-bitv011_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv011_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv011_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv011_cdcl_tableaux.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_cdcl_tableaux.output)))

(rule
 (target testfile-bitv011_cdcl.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_cdcl.output)))

(rule
 (target testfile-bitv011_tableaux_cdcl.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_tableaux_cdcl.output)))

(rule
 (target testfile-bitv011_tableaux.output)
 (deps (:input testfile-bitv011.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv011.expected 
      testfile-bitv011_tableaux.output)))

(rule
 (target testfile-bitv010_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv010_ci_cdcl.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_cdcl.output)))

(rule
 (target testfile-bitv010_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv010_ci_tableaux.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_tableaux.output)))

(rule
 (target testfile-bitv010_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv010_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv010_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv010_cdcl_tableaux.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_cdcl_tableaux.output)))

(rule
 (target testfile-bitv010_cdcl.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_cdcl.output)))

(rule
 (target testfile-bitv010_tableaux_cdcl.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_tableaux_cdcl.output)))

(rule
 (target testfile-bitv010_tableaux.output)
 (deps (:input testfile-bitv010.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv010.expected 
      testfile-bitv010_tableaux.output)))

(rule
 (target testfile-bitv009_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv009_ci_cdcl.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_cdcl.output)))

(rule
 (target testfile-bitv009_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv009_ci_tableaux.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_tableaux.output)))

(rule
 (target testfile-bitv009_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv009_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv009_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv009_cdcl_tableaux.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_cdcl_tableaux.output)))

(rule
 (target testfile-bitv009_cdcl.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_cdcl.output)))

(rule
 (target testfile-bitv009_tableaux_cdcl.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_tableaux_cdcl.output)))

(rule
 (target testfile-bitv009_tableaux.output)
 (deps (:input testfile-bitv009.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv009.expected 
      testfile-bitv009_tableaux.output)))

(rule
 (target testfile-bitv008_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv008_ci_cdcl.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_cdcl.output)))

(rule
 (target testfile-bitv008_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv008_ci_tableaux.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_tableaux.output)))

(rule
 (target testfile-bitv008_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv008_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv008_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv008_cdcl_tableaux.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_cdcl_tableaux.output)))

(rule
 (target testfile-bitv008_cdcl.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_cdcl.output)))

(rule
 (target testfile-bitv008_tableaux_cdcl.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_tableaux_cdcl.output)))

(rule
 (target testfile-bitv008_tableaux.output)
 (deps (:input testfile-bitv008.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv008.expected 
      testfile-bitv008_tableaux.output)))

(rule
 (target testfile-bitv007_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv007_ci_cdcl.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_cdcl.output)))

(rule
 (target testfile-bitv007_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv007_ci_tableaux.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_tableaux.output)))

(rule
 (target testfile-bitv007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv007_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv007_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv007_cdcl_tableaux.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_cdcl_tableaux.output)))

(rule
 (target testfile-bitv007_cdcl.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_cdcl.output)))

(rule
 (target testfile-bitv007_tableaux_cdcl.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_tableaux_cdcl.output)))

(rule
 (target testfile-bitv007_tableaux.output)
 (deps (:input testfile-bitv007.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv007.expected 
      testfile-bitv007_tableaux.output)))

(rule
 (target testfile-bitv006_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv006_ci_cdcl.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_cdcl.output)))

(rule
 (target testfile-bitv006_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv006_ci_tableaux.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_tableaux.output)))

(rule
 (target testfile-bitv006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv006_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv006_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv006_cdcl_tableaux.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_cdcl_tableaux.output)))

(rule
 (target testfile-bitv006_cdcl.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_cdcl.output)))

(rule
 (target testfile-bitv006_tableaux_cdcl.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_tableaux_cdcl.output)))

(rule
 (target testfile-bitv006_tableaux.output)
 (deps (:input testfile-bitv006.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv006.expected 
      testfile-bitv006_tableaux.output)))

(rule
 (target testfile-bitv005_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv005_ci_cdcl.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_cdcl.output)))

(rule
 (target testfile-bitv005_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv005_ci_tableaux.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_tableaux.output)))

(rule
 (target testfile-bitv005_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv005_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv005_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv005_cdcl_tableaux.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_cdcl_tableaux.output)))

(rule
 (target testfile-bitv005_cdcl.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_cdcl.output)))

(rule
 (target testfile-bitv005_tableaux_cdcl.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_tableaux_cdcl.output)))

(rule
 (target testfile-bitv005_tableaux.output)
 (deps (:input testfile-bitv005.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv005.expected 
      testfile-bitv005_tableaux.output)))

(rule
 (target testfile-bitv004_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv004_ci_cdcl.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_cdcl.output)))

(rule
 (target testfile-bitv004_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv004_ci_tableaux.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_tableaux.output)))

(rule
 (target testfile-bitv004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv004_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv004_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv004_cdcl_tableaux.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_cdcl_tableaux.output)))

(rule
 (target testfile-bitv004_cdcl.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_cdcl.output)))

(rule
 (target testfile-bitv004_tableaux_cdcl.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_tableaux_cdcl.output)))

(rule
 (target testfile-bitv004_tableaux.output)
 (deps (:input testfile-bitv004.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv004.expected 
      testfile-bitv004_tableaux.output)))

(rule
 (target testfile-bitv003_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv003_ci_cdcl.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_cdcl.output)))

(rule
 (target testfile-bitv003_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv003_ci_tableaux.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_tableaux.output)))

(rule
 (target testfile-bitv003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv003_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv003_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv003_cdcl_tableaux.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_cdcl_tableaux.output)))

(rule
 (target testfile-bitv003_cdcl.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_cdcl.output)))

(rule
 (target testfile-bitv003_tableaux_cdcl.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_tableaux_cdcl.output)))

(rule
 (target testfile-bitv003_tableaux.output)
 (deps (:input testfile-bitv003.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv003.expected 
      testfile-bitv003_tableaux.output)))

(rule
 (target testfile-bitv002_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv002_ci_cdcl.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_cdcl.output)))

(rule
 (target testfile-bitv002_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv002_ci_tableaux.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_tableaux.output)))

(rule
 (target testfile-bitv002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv002_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv002_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv002_cdcl_tableaux.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_cdcl_tableaux.output)))

(rule
 (target testfile-bitv002_cdcl.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_cdcl.output)))

(rule
 (target testfile-bitv002_tableaux_cdcl.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_tableaux_cdcl.output)))

(rule
 (target testfile-bitv002_tableaux.output)
 (deps (:input testfile-bitv002.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv002.expected 
      testfile-bitv002_tableaux.output)))

(rule
 (target testfile-bitv001_ci_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv001_ci_cdcl.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_cdcl.output)))

(rule
 (target testfile-bitv001_ci_tableaux_cdcl.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_tableaux_cdcl.output)))

(rule
 (target testfile-bitv001_ci_tableaux.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_tableaux.output)))

(rule
 (target testfile-bitv001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_cdcl_tableaux_no_minimal_bj_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories_and_instantiation.output)))

(rule
 (target testfile-bitv001_ci_no_tableaux_cdcl_in_instantiation.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-instantiation %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_no_tableaux_cdcl_in_instantiation.output)))

(rule
 (target testfile-bitv001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-tableaux-cdcl-in-theories %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_cdcl_tableaux_no_tableaux_cdcl_in_theories.output)))

(rule
 (target testfile-bitv001_ci_tableaux_cdcl_no_minimal_bj.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux 
       --no-minimal-bj %{input})))))))
 (rule
  (alias runtest-ci)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_ci_tableaux_cdcl_no_minimal_bj.output)))

(rule
 (target testfile-bitv001_cdcl_tableaux.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL-Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_cdcl_tableaux.output)))

(rule
 (target testfile-bitv001_cdcl.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_cdcl.output)))

(rule
 (target testfile-bitv001_tableaux_cdcl.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux-CDCL %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_tableaux_cdcl.output)))

(rule
 (target testfile-bitv001_tableaux.output)
 (deps (:input testfile-bitv001.ae))
 (package alt-ergo-lib)
 (action
  (chdir %{workspace_root}
   (with-stdout-to %{target}
    (ignore-stderr
     (with-accepted-exit-codes 0
      (run alt-ergo --output=smtlib2 
       --timelimit=1 
       --sat-solver Tableaux %{input})))))))
 (rule
  (alias runtest)
   (package alt-ergo-lib)
    (action (diff testfile-bitv001.expected 
      testfile-bitv001_tableaux.output)))
; Auto-generated part end
